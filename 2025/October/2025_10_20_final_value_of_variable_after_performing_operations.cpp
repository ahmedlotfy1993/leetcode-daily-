/***************************************************************************************************
ðŸ’  Problem: Final Value of Variable After Performing Operations
----------------------------------------------------------------------------------------------------
You are given an array of strings `operations`, where each string represents one of the following:
    "++X"  â†’ Pre-increment operation (increase X by 1)
    "X++"  â†’ Post-increment operation (increase X by 1)
    "--X"  â†’ Pre-decrement operation (decrease X by 1)
    "X--"  â†’ Post-decrement operation (decrease X by 1)

Initially, the variable X = 0.

Return the final value of X after performing all operations in the given order.

----------------------------------------------------------------------------------------------------
ðŸ”¹ Example 1:
Input:
    operations = ["--X","X++","X++"]
Output:
    1
Explanation:
    X = 0 â†’ -1 â†’ 0 â†’ 1

ðŸ”¹ Example 2:
Input:
    operations = ["++X","++X","X++"]
Output:
    3

----------------------------------------------------------------------------------------------------
ðŸ’¡ Approach: Direct Counting âœ…
----------------------------------------------------------------------------------------------------
ðŸ”¸ Observation:
    - Any operation containing "++" increases X by 1.
    - Any operation containing "--" decreases X by 1.
ðŸ”¸ Therefore, we can iterate once and count increments vs. decrements directly.

----------------------------------------------------------------------------------------------------
ðŸ”¹ Key Technique:
- String pattern check (simple decision based on substring match)
- No complex data structures required

----------------------------------------------------------------------------------------------------
ðŸ”¸ Time Complexity:  O(n)
    - One pass over the list of operations.

ðŸ”¸ Space Complexity: O(1)
    - Constant auxiliary space.

***************************************************************************************************/
class Solution {
public:
    int finalValueAfterOperations(vector<string>& operations) {
#if USE_DIRECT_COUNT
        int result = 0;
        for (const auto& operation : operations) {
            if (operation == "++X" || operation == "X++")
                result++;
            else
                result--;
        }
        return result;
#endif
    }
};
